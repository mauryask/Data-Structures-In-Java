============>>>  Finding the array element address in the given 1D array  <<<===============

 Given an array (base address (B), size of each element (W), lowerbound (LB)-- the lower index from which the array started)(like 0 in normal cases)
 then findout the "address of the A[i] element" 

formula: adress of A[i] = B + W * (i - LB)

for example if  A[] = {1300....1900}  here 

LB = 1300 (the index from where the array starts)
let W = 2 Byte
i = 1700
base adress B  = 1020

The Addrres of A[1700]  =  1020 + 2 * (1700-1300)  =  1020 + 800 = 1820 (Answer)  

=================>>> finding element address in 2D array  <<<====================

==>> in row mjor order

Add(a[i][j]) = BA + W [N (i-LBR) +(j-LBC)]

here 
 BA => base addrress
 W => size of each element
 i => row number
 j => column number
 LBC => starting index of column
 LBR => starting address of row
 N => number of total columns

==>> in column major order

Add(A[i][j]) = BA + W [M (j-LBC) + (i-LBR)]

here
 M => number of total rows
 
>> in the question if no order is given by default take: row major order 


>> Java does not have multi dimentional array but array of arrays (It uses neither row major nor column major order)
--> https://stackoverflow.com/questions/6630990/java-a-two-dimensional-array-is-stored-in-column-major-or-row-major-order